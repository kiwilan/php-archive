name: Tests on unix

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        php: [8.1, 8.2]
        stability: [prefer-stable]

    name: P${{ matrix.php }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Install for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt -y install p7zip-full ghostscript imagemagick
          sudo apt-get install -y unrar
          sudo apt-get install -y libunrar-dev
          sudo sed -i '/disable ghostscript format types/,+6d' /etc/ImageMagick-6/policy.xml
        shell: bash

      - name: Install for macOS
        if: runner.os == 'macOS'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew install p7zip rar ghostscript imagemagick
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: pcov

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Add rar extension
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          git clone https://github.com/cataphract/php-rar
          cd php-rar
          phpize
          ./configure
          sudo make
          sudo make install
          pecl_path=$(pecl config-get ext_dir)
          phpini_path=$(php -i | grep /.+/php.ini -oE)
          sudo cp ./modules/rar.so $pecl_path
          sudo echo "extension=rar.so" > $phpini_path

      - name: Check extension rar
        run: php -m | grep rar

      - name: Check extension imagick
        run: php -m | grep imagick

      - name: Execute tests
        run: vendor/bin/pest --coverage

      - name: on Linux run phpstan
        if: runner.os == 'Linux'
        run: vendor/bin/phpstan analyse --memory-limit=2G
        shell: bash

      - name: on Linux send code coverage
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: false
