name: Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.2, 8.1]
        stability: [prefer-lowest, prefer-stable]

    name: P${{ matrix.php }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo, rar
          coverage: pcov

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: Add rar extension
        run: |
          sudo apt-get install -y unrar
          sudo apt-get install -y libunrar-dev
          cd ~
          git clone https://github.com/cataphract/php-rar
          cd php-rar
          phpize
          ./configure
          make
          make install
          cd ..
          pecl_path=$(pecl config-get ext_dir)
          echo $pecl_path
          sudo cp ~/php-rar/modules/rar.so $pecl_path
          sudo echo "extension=rar.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini

      - name: Execute tests
        run: vendor/bin/pest --coverage

      - name: Send code coverage report to Codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: false
